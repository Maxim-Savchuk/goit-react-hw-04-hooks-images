{"version":3,"sources":["components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","service/ApiService.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["SearchbarContainer","styled","header","SearchForm","form","SearchFormBtn","button","SearchFormBtnLabel","span","SearchFormInput","input","Searchbar","onSubmit","useState","imageName","setImageName","e","preventDefault","trim","toast","error","type","autocomplete","autoFocus","value","placeholder","onChange","target","toLowerCase","GalleryItem","li","GalleryItemImage","img","ImageGalleryItem","webformatURL","tag","onSelect","src","alt","onClick","ImageGalleryList","ul","ImageGallery","images","map","id","largeImageURL","tags","LoaderContainer","div","LoaderSpinner","color","height","width","timeout","Button","LoadMoreButton","title","propTypes","PropTypes","func","string","Overlay","ModalEl","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","currentTarget","fetchImages","page","a","url","fetch","then","response","ok","json","Promise","reject","Error","result","Container","App","setImages","setPage","isLoading","setIsLoading","selectedImage","setSelectedImage","selectedImageName","setSelectedImageName","data","hits","length","prevState","catch","console","log","message","finally","handleScroll","scrollTo","top","body","scrollHeight","behavior","showBtn","imageUrl","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d1144b8d.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const SearchbarContainer = styled.header`\r\n    top: 0;\r\n    left: 0;\r\n    position: sticky;\r\n    z-index: 1100;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 64px;\r\n    padding-right: 24px;\r\n    padding-left: 24px;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n    color: #fff;\r\n    background-color: #3f51b5;\r\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const SearchForm = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    max-width: 600px;\r\n    background-color: #fff;\r\n    border-radius: 3px;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const SearchFormBtn = styled.button`\r\n    display: inline-block;\r\n    width: 48px;\r\n    height: 48px;\r\n    border: 0;\r\n    background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n    background-size: 40%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    opacity: 0.6;\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    cursor: pointer;\r\n    outline: none;\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nexport const SearchFormBtnLabel = styled.span`\r\n    position: absolute;\r\n    width: 1px;\r\n    height: 1px;\r\n    padding: 0;\r\n    overflow: hidden;\r\n    clip: rect(0, 0, 0, 0);\r\n    white-space: nowrap;\r\n    clip-path: inset(50%);\r\n    border: 0;\r\n`;\r\n\r\nexport const SearchFormInput = styled.input`\r\n    display: inline-block;\r\n    width: 100%;\r\n    font: inherit;\r\n    font-size: 20px;\r\n    border: none;\r\n    outline: none;\r\n    padding-left: 4px;\r\n    padding-right: 4px;\r\n    &::placeholder {\r\n        font: inherit;\r\n        font-size: 18px;\r\n    }\r\n`;","import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport {\r\n    SearchbarContainer,\r\n    SearchForm,\r\n    SearchFormBtn,\r\n    SearchFormBtnLabel,\r\n    SearchFormInput\r\n} from \"./Searchbar.styled\";\r\n\r\nexport const Searchbar = ({ onSubmit }) => {\r\n    const [imageName, setImageName] = useState('');\r\n\r\n    const handleNameChange = e => {\r\n        setImageName(e.target.value.toLowerCase());\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (imageName.trim() === '') {\r\n            toast.error('Please enter the image name.')\r\n            return;\r\n        }\r\n\r\n        onSubmit(imageName);\r\n        setImageName('');\r\n    }\r\n\r\n    return (\r\n        <SearchbarContainer>\r\n            <SearchForm onSubmit={handleSubmit}>\r\n                <SearchFormBtn type=\"submit\">\r\n                    <SearchFormBtnLabel>Search</SearchFormBtnLabel>\r\n                </SearchFormBtn>\r\n\r\n                <SearchFormInput\r\n                    type=\"text\"\r\n                    autocomplete=\"off\"\r\n                    autoFocus\r\n                    value={imageName}\r\n                    placeholder=\"Search images and photos\"\r\n                    onChange={handleNameChange}\r\n                />\r\n            </SearchForm>\r\n        </SearchbarContainer>\r\n    )\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const GalleryItem = styled.li`\r\n    border-radius: 2px;\r\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const GalleryItemImage = styled.img`\r\n    width: 100%; \r\n    height: 260px; \r\n    object-fit: cover; \r\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    &:hover {\r\n        transform: scale(1.03);\r\n        cursor: zoom-in;\r\n    }\r\n`;","import PropTypes from 'prop-types';\r\n\r\nimport { GalleryItem, GalleryItemImage } from \"./ImageGalleryItem.styled\"\r\n\r\nexport const ImageGalleryItem = ({ webformatURL, tag, onSelect }) => {\r\n    return (\r\n        <GalleryItem >\r\n            <GalleryItemImage src={webformatURL} alt={tag} onClick={onSelect} />\r\n        </GalleryItem>\r\n    )\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    webformatURL: PropTypes.string,\r\n    tag: PropTypes.string,\r\n    onSelect: PropTypes.func,\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const ImageGalleryList = styled.ul`\r\n    display: grid;\r\n    max-width: calc(100vw - 48px);\r\n    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n    grid-gap: 16px;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n`;","import PropTypes from 'prop-types';\r\nimport { ImageGalleryItem } from \"components/ImageGalleryItem\";\r\n\r\nimport { ImageGalleryList } from \"./ImageGallery.styled\";\r\n\r\nexport const ImageGallery = ({ images, onSelect }) => {\r\n    return (\r\n        <ImageGalleryList>\r\n            {images &&\r\n                images.map(({ id, webformatURL, largeImageURL, tags }) => {\r\n                    const selectImage = () => onSelect(largeImageURL, tags);\r\n                    return (\r\n                        <ImageGalleryItem\r\n                            key={id}\r\n                            webformatURL={webformatURL}\r\n                            alt={tags}\r\n                            onSelect={selectImage}\r\n                        />\r\n                    )\r\n                })}\r\n        </ImageGalleryList>\r\n    )\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.object),\r\n    onSelect: PropTypes.func,\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const LoaderContainer = styled.div`\r\n  margin: 0 auto;\r\n`;","import Loader from \"react-loader-spinner\";\r\n\r\nimport { LoaderContainer } from \"./Loader.styled\";\r\n\r\nexport const LoaderSpinner = () => {\r\n    return (\r\n        <LoaderContainer>\r\n            <Loader\r\n                type=\"ThreeDots\"\r\n                color=\"#3F51B5\"\r\n                height={80}\r\n                width={80}\r\n                timeout={3000}\r\n            />\r\n        </LoaderContainer>\r\n    )\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\n    padding: 8px 16px;\r\n    border-radius: 2px;\r\n    background-color: #3f51b5;\r\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    text-align: center;\r\n    display: inline-block;\r\n    color: #fff;\r\n    border: 0;\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    font-family: inherit;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    font-style: normal;\r\n    font-weight: 500;\r\n    width: 180px;\r\n    margin: 0 auto;\r\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n    &:hover,\r\n    &:focus {\r\n      background-color: #303f9f;\r\n    }\r\n`;","import PropTypes from 'prop-types';\r\n\r\nimport { Button } from \"./Button.styled\"\r\n\r\nexport const LoadMoreButton = ({ onClick, title }) => {\r\n    return (\r\n        <Button type=\"button\" onClick={onClick}>\r\n            {title}\r\n        </Button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func,\r\n    title: PropTypes.string,\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Overlay = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n    z-index: 1200;\r\n`;\r\n\r\nexport const ModalEl = styled.div`\r\n    max-width: calc(100vw - 48px);\r\n    max-height: calc(100vh - 24px);\r\n`;","import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport { Overlay, ModalEl } from './Modal.styled';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport const Modal = ({ onClose, src, alt }) => {\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    })\r\n\r\n    const handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            onClose();\r\n        }\r\n    }\r\n\r\n    const handleBackdropClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            onClose();\r\n        }\r\n    }\r\n\r\n    return createPortal(\r\n        <Overlay onClick={handleBackdropClick}>\r\n            <ModalEl>\r\n                <img src={src} alt={alt} />\r\n            </ModalEl>\r\n        </Overlay>,\r\n        modalRoot\r\n    )\r\n}\r\n\r\nModal.propTypes = {\r\n    src: PropTypes.string,\r\n    alt: PropTypes.string,\r\n    onClose: PropTypes.func,\r\n}","export const fetchImages = async (imageName, page) => {\r\n    const API_KEY = '22714913-606cac6e21aef876ccb1111b2';\r\n    const BASE_URL = 'https://pixabay.com/api/';\r\n    const url = `${BASE_URL}?q=${imageName}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n    const result = await fetch(url).then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n\r\n        return Promise.reject(new Error('Error'));\r\n    })\r\n\r\n    return result;\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-gap: 16px;\r\n    padding-bottom: 24px;\r\n`;","import { useState, useEffect } from \"react\";\nimport { ToastContainer } from 'react-toastify';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Searchbar } from \"components/Searchbar\";\nimport { ImageGallery } from \"components/ImageGallery\";\nimport { LoaderSpinner } from \"components/Loader\";\nimport { LoadMoreButton } from \"components/Button\";\nimport { Modal } from \"components/Modal\";\n\nimport { fetchImages } from \"service/ApiService\";\n\nimport { Container } from \"./App.styled\";\n\nexport const App = () => {\n  const [imageName, setImageName] = useState('');\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedImage, setSelectedImage] = useState('');\n  const [selectedImageName, setSelectedImageName] = useState('');\n\n  useEffect(() => {\n    if (!imageName) {\n      return;\n    }\n    setIsLoading(true);\n\n    fetchImages(imageName, page)\n      .then(data => {\n        if (data.hits.length === 0) {\n          toast.error('Ooops, no images found.');\n          return;\n        }\n        setImages(prevState => [...prevState, ...data.hits])\n      })\n      .catch(error => console.log(error.message))\n      .finally(() => {\n        setIsLoading(false);\n        handleScroll();\n      });\n  }, [imageName, page])\n\n  const handleFormSubmit = imageName => {\n    setImageName(imageName);\n    setImages([]);\n    setPage(1);\n  }\n\n  const handleScroll = () => {\n    window.scrollTo({\n      top: document.body.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  const handleLoadMoreBtnClick = () => {\n    setPage(prevState => prevState + 1)\n  }\n\n  const handleSelectedImage = (imageUrl, alt) => {\n    setSelectedImage(imageUrl);\n    setSelectedImageName(alt);\n  }\n\n  const handleCloseModal = () => {\n    setSelectedImage('');\n    setSelectedImageName('');\n  }\n\n  const showBtn = images.length > 0;\n\n  return (\n    <Container>\n      <Searchbar onSubmit={handleFormSubmit} />\n      {isLoading &&\n        <LoaderSpinner />\n      }\n      <ImageGallery images={images} onSelect={handleSelectedImage} />\n      {selectedImage &&\n        <Modal src={selectedImage} alt={selectedImageName} onClose={handleCloseModal} />\n      }\n      {showBtn &&\n        <LoadMoreButton title=\"Load more\" onClick={handleLoadMoreBtnClick} />\n      }\n      <ToastContainer autoClose={3000} />\n    </Container>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}